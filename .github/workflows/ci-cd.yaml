name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - api-gateway
          - user-service
          - collection-service
          - payment-service
          - location-service
          - chat-service
          - notification-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for ${{ matrix.service }}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/greenora-${{ matrix.service }}:latest ./${{ matrix.service }}

      - name: Push Docker image for ${{ matrix.service }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/greenora-${{ matrix.service }}:latest

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: build-and-push

    strategy:
      matrix:
        deployment:
          - api-gateway
          - user-service
          - collection-service
          - payment-service
          - location-service
          - chat-service
          - notification-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Google Cloud SDK and auth plugin
        run: |
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates gnupg curl
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk
          gcloud components install gke-gcloud-auth-plugin -q    

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: Configure Kubeconfig to connect to GKE
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f ./k8s/

      - name: Restart and wait for rollout of ${{ matrix.deployment }}
        run: |
          kubectl rollout restart deployment ${{ matrix.deployment }}
          kubectl rollout status deployment ${{ matrix.deployment }} --timeout=120s
